name: CI

# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Compile Java Classes
        run: |
          cd ./Projects/P2
          ./gradlew build testClasses -x test
  testmapmove:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      container: openjdk:13
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        # Runs a single command using the runners shell
        - name: Test Map Move
          run: |
            cd ./Projects/P2/
            ./gradlew build testClasses -x test
            ./gradlew test --tests TestMapMove
  testpacmanvalidmoves:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Test PacMan Get Valid Moves
        run: |
          cd ./Projects/P2/
          ./gradlew build testClasses -x test
          ./gradlew test --tests TestPacManValidMoves
  testghostvalidmoves:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Test Ghost Valid Moves
        run: |
          cd ./Projects/P2/
          ./gradlew build testClasses -x test
          ./gradlew test --tests TestGhostValidMoves

  testghostattack:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Test Ghost Attack
        run: |
          cd ./Projects/P2/
          ./gradlew build testClasses -x test
          ./gradlew test --tests TestGhostAttack

# testisghostinrange:
#       # The type of runner that the job will run on
#       runs-on: ubuntu-latest
#       container: openjdk:13
#       steps:
#         # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#         - uses: actions/checkout@v2
#         # Runs a single command using the runners shell
#         - name: Test Is Ghost in Range
#           run: |
#             cd ./Projects/P2/
#             ./gradlew build testClasses -x test
#             ./gradlew test --tests TestGhostInRange

testghostmove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Test ghost move
        run: |
          cd ./Projects/P2/
          ./gradlew build testClasses -x test
          ./gradlew test --tests TestGhostMove

# testmapattack:
#   # The type of runner that the job will run on
#   runs-on: ubuntu-latest
#   container: openjdk:13
#   steps:
#     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#     - uses: actions/checkout@v2
#     # Runs a single command using the runners shell
#     - name: Test map attack
#       run: |
#         cd ./Projects/P2/
#         ./gradlew build testClasses -x test
#         ./gradlew test --tests TestMapAttack

# testmapeatcookie:
#       # The type of runner that the job will run on
#       runs-on: ubuntu-latest
#       container: openjdk:13
#       steps:
#         - uses: actions/checkout@v2
#         # Runs a single command using the runners shell
#         - name: Test Map Eat Cookie
#           run: |
#             cd ./Projects/P2/
#             ./gradlew build testClasses -x test
#             ./gradlew test --tests TestMapEatCookie


# testgetloc:
#   # The type of runner that the job will run on
#   runs-on: ubuntu-latest
#   container: openjdk:13
#   steps:
#     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#     - uses: actions/checkout@v2
#     # Runs a single command using the runners shell
#     - name: Test map get loc
#       run: |
#         cd ./Projects/P2/
#         ./gradlew build testClasses -x test
#         ./gradlew test --tests TestMapGetLoc

# testpacmangeconsume:
#       # The type of runner that the job will run on
#       runs-on: ubuntu-latest
#       container: openjdk:13
#       steps:
#         # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#         - uses: actions/checkout@v2
#         # Runs a single command using the runners shell
#         - name: Test PacMan Consume
#           run: |
#             cd ./Projects/P2/
#             ./gradlew build testClasses -x test
#             ./gradlew test --tests TestConsume
# testispacmaninrange:
#       # The type of runner that the job will run on
#       runs-on: ubuntu-latest
#       container: openjdk:13
#       steps:
#         # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#         - uses: actions/checkout@v2
#         # Runs a single command using the runners shell
#         - name: Test Is Pacman in Range
#           run: |
#             cd ./Projects/P2/
#             ./gradlew build testClasses -x test
#             ./gradlew test --tests TestPacManInRange

# testpacmanmove:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     container: openjdk:13
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2
#       # Runs a single command using the runners shell
#       - name: Test PacMan Move
#         run: |
#           cd ./Projects/P2/
#           ./gradlew build testClasses -x test
#           ./gradlew test --tests TestPacManMove
          

          




