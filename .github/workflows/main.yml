name: CI

# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk:13
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Compile Java Classes
        run: |
          cd ./Projects/P2
          ./gradlew build testClasses -x test
  testmapmove:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      container: openjdk
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        # Runs a single command using the runners shell
        - name: Test Map Move
          run: |
            cd ./Projects/P2/app/bin/src/
            javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
            java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestMapMove
  testpacmanvalidmoves:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Test PacMan Get Valid Moves
        run: |
          cd ./Projects/P2/app/bin/src/
          javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestPacManValidMoves
  testghostvalidmoves:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Test Ghost Valid Moves
        run: |
          cd ./Projects/P2/app/bin/src/
          javac -cp "tests/junit-4.10.jar:tests/*:src/*" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestGhostValidMoves
